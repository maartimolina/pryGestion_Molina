<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>